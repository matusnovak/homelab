apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "loki.cassandra.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "loki.cassandra.labels" . | nindent 4 }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      {{- include "loki.cassandra.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.cassandra.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "loki.cassandra.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.cassandra.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "loki.cassandra.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.cassandra.podSecurityContext | nindent 8 }}
      initContainers:
        - name: {{ printf "%s-init" .Chart.Name }}
          image: "{{ .Values.global.busybox.repository }}:{{ .Values.global.busybox.tag }}"
          command:
            - 'sh'
            - '-c'
            - 'chmod 755 /bitnami && chown 1001:1001 /bitnami'
          volumeMounts:
            - name: data-volume
              mountPath: /bitnami
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.cassandra.securityContext | nindent 12 }}
          image: "{{ .Values.cassandra.image.repository }}:{{ .Values.cassandra.image.tag }}"
          imagePullPolicy: {{ .Values.cassandra.image.pullPolicy }}
          env:
            - name: CASSANDRA_TRANSPORT_PORT_NUMBER
              value: '7000'
            - name: CASSANDRA_USER
              value: cassandra
            - name: CASSANDRA_PASSWORD_SEEDER
              value: 'yes'
            - name: CASSANDRA_PASSWORD
              value: '{{ .Values.cassandra.password }}'
          {{- with .Values.cassandra.env }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: client
              containerPort: 9042
              protocol: TCP
            - name: transport
              containerPort: 7000
              protocol: TCP
          resources:
            {{- toYaml .Values.cassandra.resources | nindent 12 }}
          volumeMounts:
            - name: data-volume
              mountPath: /bitnami
      {{- with .Values.cassandra.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.cassandra.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.cassandra.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: data-volume
          persistentVolumeClaim:
            claimName: {{ include "loki.cassandra.persistentVolumeClaimName" . }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "loki.server.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "loki.server.labels" . | nindent 4 }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      {{- include "loki.server.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.server.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "loki.server.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.server.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "loki.server.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.server.podSecurityContext | nindent 8 }}
      initContainers:
        - name: {{ printf "%s-init" .Chart.Name }}
          image: "{{ .Values.global.busybox.repository }}:{{ .Values.global.busybox.tag }}"
          command:
            - 'sh'
            - '-c'
            - 'chmod 755 /data && chown 10001:10001 /data'
          volumeMounts:
            - name: data-volume
              mountPath: /data
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.server.securityContext | nindent 12 }}
          image: "{{ .Values.server.image.repository }}:{{ .Values.server.image.tag }}"
          imagePullPolicy: {{ .Values.server.image.pullPolicy }}
          {{- with .Values.server.env }}
          env:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          args:
            - '-config.file=/etc/loki/config.yml'
          ports:
            - name: api
              containerPort: 3100
              protocol: TCP
          resources:
            {{- toYaml .Values.server.resources | nindent 12 }}
          volumeMounts:
            - name: data-volume
              mountPath: /data
            - name: config-volume
              mountPath: /etc/loki/config.yml
              subPath: config.yml
      {{- with .Values.server.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.server.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.server.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: data-volume
          persistentVolumeClaim:
            claimName: {{ include "loki.server.persistentVolumeClaimName" . }}
        - name: config-volume
          configMap:
            name: {{ include "loki.server.fullname" . }}
