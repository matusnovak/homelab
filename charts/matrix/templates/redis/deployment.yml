apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "matrix.redis.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "matrix.redis.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.redis.replicaCount }}
  strategy:
    type: Recreate
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      {{- include "matrix.redis.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.redis.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "matrix.redis.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.redis.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "matrix.redis.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.redis.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.redis.securityContext | nindent 12 }}
          image: "{{ .Values.redis.image.repository }}:{{ .Values.redis.image.tag }}"
          imagePullPolicy: {{ .Values.redis.image.pullPolicy }}
          {{- with .Values.redis.env }}
          env:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          command:
            - 'redis-server'
          args:
            - '--requirepass'
            - '{{ .Values.redis.password }}'
          ports:
            - name: redis
              containerPort: 6379
              protocol: TCP
          resources:
            {{- toYaml .Values.redis.resources | nindent 12 }}
      {{- with .Values.redis.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.redis.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.redis.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
