name: integration
on: [push, pull_request]
jobs:
  unit_tests:
    name: 'Unit Tests'
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Dependencies
        run: python3 -m pip install pytest docker ansible

      - name: Run Tests
        run: python3 -m pytest './tests/unit/' -s

  dependencies:
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: 'Traefik'
            role: 'traefik'
          - name: 'Postgres'
            role: 'postgres'
    name: 'App: ${{ matrix.name }} (dependency)'
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [unit_tests]
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Generate playbook
        run: |
          echo "---" > integration.yml
          echo "- hosts: homelab" >> integration.yml
          echo "  roles:" >> integration.yml
          echo "    - ${{ matrix.role }}" >> integration.yml

      - name: Ansible
        run: |
          cp ./.github/workflows/vault.yml.sample ./group_vars/homelab/vault.yml
          cp ./.github/workflows/vault.pass .
          ansible-playbook integration.yml -v --vault-password-file=vault.pass

  apps:
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: 'Haste'
            role: 'haste'
          - name: 'Portainer'
            role: 'portainer'
    name: 'App: ${{ matrix.name }}'
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [dependencies]
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Generate playbook
        run: |
          echo "---" > integration.yml
          echo "- hosts: homelab" >> integration.yml
          echo "  roles:" >> integration.yml
          echo "    - ${{ matrix.role }}" >> integration.yml

      - name: Ansible
        run: |
          cp ./.github/workflows/vault.yml.sample ./group_vars/homelab/vault.yml
          cp ./.github/workflows/vault.pass .
          ansible-playbook integration.yml -v --vault-password-file=vault.pass
