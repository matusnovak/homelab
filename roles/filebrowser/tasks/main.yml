---
- name: Create FileBrowser folder structure
  become: yes
  file:
    path: "{{ data_dir }}/data/filebrowser/{{item}}"
    state: directory
    owner: "{{ filebrowser.uid }}"
    group: "{{ filebrowser.uid }}"
    recurse: yes
  loop:
    - "data"
    - "config"

- name: Create FileBrowser config files
  become: yes
  template:
    src: "roles/filebrowser/files/{{item}}.j2"
    dest: "{{ data_dir }}/data/filebrowser/config/{{item}}"
  loop:
    - "filebrowser.json"
  register: filebrowser_config

- name: Deploy FileBrowser
  docker_deploy:
    host: "{{ docker.host }}"
    project: "{{ project_name }}"
    container:
      image: "{{ images.filebrowser }}"
      name: "filebrowser"
      user: "{{ filebrowser.uid }}:{{ filebrowser.gid }}"
      networks:
        - name: "{{ docker_network.name }}"
          alias: "filebrowser"
      volumes:
        - host: "{{ data_dir }}/data/filebrowser/data"
          guest: "/database"
          read_only: false
        - host: "{{ data_dir }}/data/filebrowser/config/filebrowser.json"
          guest: "/.filebrowser.json"
          read_only: true
        - host: "{{ filebrowser.path }}"
          guest: "/files"
          read_only: "{{ filebrowser.read_only }}"
      labels:
        - key: "traefik.enable"
          value: "true"
        - key: "traefik.http.services.filebrowser.loadbalancer.server.port"
          value: "80"
        - key: "traefik.http.routers.filebrowser.rule"
          value: "Host(`files.{{ domain_name }}`)"
        - key: "traefik.http.routers.filebrowser.entrypoints"
          value: "{{ traefik_entrypoints }}"
        - key: "traefik.http.routers.filebrowser.tls.certresolver"
          value: "{{ traefik_certresolver }}"
        - key: "traefik.http.routers.filebrowser.tls"
          value: "{{ 'true' if traefik.https.enabled else 'false' }}"
  register: container_filebrowser

- name: Restart FileBrowser if config changes
  docker_restart:
    host: "{{ docker.host }}"
    project: "{{ project_name }}"
    containers:
      - "traefik"
  when: container_filebrowser.changed == false and filebrowser_config.changed

- name: Healthcheck for FileBrowser 
  http_wait:
    url: "{{traefik_entrypoint}}"
    status_code: "200"
    retries: 3
    delay: 5
    headers:
      - "Host: files.{{ domain_name }}"

- name: Copy script for FileBrowser
  copy:
    src: "roles/filebrowser/files/filebrowser.py"
    dest: "/tmp/filebrowser.py"

- name: Run script for FileBrowser
  docker_script:
    docker:
      host: "{{ docker.host }}"
    network: "{{ docker_network.name }}"
    image: "{{ scriptrunner.id }}"
    script: "/tmp/filebrowser.py"
    args:
      - "init"
      - |
        {
          "url": "http://{{ container_filebrowser.alias }}:80",
          "username": "admin",
          "password": "{{ passwords.filebrowser_admin }}"
        }
