---
- name: Create OpenLDAP folder structure
  become: yes
  file:
    path: "{{ data_dir }}/data/ldap/{{ item }}"
    state: directory
    mode: 0700
    owner: "911"
    group: "911"
    recurse: false
  loop:
    - "data"
    - "config"

- name: Deploy OpenLDAP
  docker_deploy:
    host: "{{ docker.host }}"
    project: "{{ project_name }}"
    container:
      image: "{{ images.openldap }}"
      name: "openldap"
      networks:
        - name: "{{ docker_network.name }}"
          alias: "openldap"
      volumes:
        - host: "{{ data_dir }}/data/ldap/data"
          guest: "/var/lib/ldap"
          read_only: false
        - host: "{{ data_dir }}/data/ldap/config"
          guest: "/etc/ldap/slapd.d"
          read_only: false
      environment:
        - key: "LDAP_ORGANISATION"
          value: "{{ ldap.organisation }}"
        - key: "LDAP_BASE_DN"
          value: "{{ ldap.domain }}"
        - key: "LDAP_DOMAIN"
          value: "{{ domain_name }}"
        - key: "LDAP_ADMIN_PASSWORD"
          value: "{{ passwords.ldap_admin }}"
  register: container_ldap

- name: Copy script for OpenLDAP
  copy:
    src: "roles/ldap/files/openldap.py"
    dest: "/tmp/openldap.py"

- name: Healthcheck for OpenLDAP
  docker_script:
    docker:
      host: "{{ docker.host }}"
    network: "{{ docker_network.name }}"
    image: "{{ scriptrunner.id }}"
    script: "/tmp/openldap.py"
    args:
      - "healthcheck"
      - |
        {
          "address": "ldap://{{ container_ldap.alias }}:389",
          "user": "cn=admin,{{ ldap.domain }}",
          "password": "{{ passwords.ldap_admin }}"
        }

- name: Create LDAP groups organisation unit
  docker_script:
    docker:
      host: "{{ docker.host }}"
    network: "{{ docker_network.name }}"
    image: "{{ scriptrunner.id }}"
    script: "/tmp/openldap.py"
    args:
      - "organizationa_unit"
      - |
        {
          "address": "ldap://{{ container_ldap.alias }}:389",
          "user": "cn=admin,{{ ldap.domain }}",
          "password": "{{ passwords.ldap_admin }}",
          "base": "{{ ldap.domain }}",
          "name": "{{ ldap.groups_unit }}"
        }
  register: "ldap_groups"

- name: Create LDAP users organisation unit
  docker_script:
    docker:
      host: "{{ docker.host }}"
    network: "{{ docker_network.name }}"
    image: "{{ scriptrunner.id }}"
    script: "/tmp/openldap.py"
    args:
      - "organizationa_unit"
      - |
        {
          "address": "ldap://{{ container_ldap.alias }}:389",
          "user": "cn=admin,{{ ldap.domain }}",
          "password": "{{ passwords.ldap_admin }}",
          "base": "{{ ldap.domain }}",
          "name": "{{ ldap.users_unit }}"
        }
  register: "ldap_users"

- name: Create LDAP posix group
  docker_script:
    docker:
      host: "{{ docker.host }}"
    network: "{{ docker_network.name }}"
    image: "{{ scriptrunner.id }}"
    script: "/tmp/openldap.py"
    args:
      - "posix_group"
      - |
        {
          "address": "ldap://{{ container_ldap.alias }}:389",
          "user": "cn=admin,{{ ldap.domain }}",
          "password": "{{ passwords.ldap_admin }}",
          "base": "{{ ldap_groups.dn }}",
          "name": "user"
        }
  register: "ldap_posix_group"
