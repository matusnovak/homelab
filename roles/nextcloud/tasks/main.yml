---
- name: Create NextCloud folder structure
  become: yes
  file:
    path: "{{ data_dir }}/data/nextcloud/{{item}}"
    state: directory
    mode: 0755
    owner: "33"
    group: "0"
    recurse: no
  loop:
    - "html"
    - "apps"
    - "config"
    - "theme"

- name: Create NextCloud data folder
  become: yes
  file:
    path: "{{ data_dir }}/data/nextcloud/data"
    state: directory
    mode: 0770
    owner: "33"
    group: "33"
    recurse: no
  when: not nextcloud.data.override

- name: Create database and user for NextCloud
  docker_script:
    docker:
      host: "{{ docker.host }}"
    network: "{{ docker_network.name }}"
    image: "{{ scriptrunner.id }}"
    script: "/tmp/postgres.py"
    args:
      - "create"
      - |
        {
          "host": "{{ container_postgres.alias }}",
          "user": "postgres",
          "password": "{{ passwords.postgres_admin }}",
          "database": "postgres",
          "port": 5432,
          "create": {
            "database": {
              "name": "nextcloud"
            },
            "user": {
              "name": "nextcloud",
              "password": "{{ passwords.nextcloud_database }}",
              "database": "nextcloud"
            }
          }
        }

- name: Create LDAP group for NextCloud
  docker_script:
    docker:
      host: "{{ docker.host }}"
    network: "{{ docker_network.name }}"
    image: "{{ scriptrunner.id }}"
    script: "/tmp/openldap.py"
    args:
      - "group"
      - |
        {
          "address": "ldap://{{ container_ldap.alias }}:389",
          "user": "cn=admin,{{ ldap.domain }}",
          "password": "{{ passwords.ldap_admin }}",
          "base": "{{ ldap_groups.dn }}",
          "name": "{{ nextcloud.ldap.group }}",
          "members": [
            {
              "name": "cn=admin,{{ ldap.domain }}"
            }
          ]
        }
  register: "ldap_groups_nextcloud"
  when: "nextcloud.ldap.enabled"

- name: Deploy NextCloud Redis
  docker_deploy:
    host: "{{ docker.host }}"
    project: "{{ project_name }}"
    container:
      image: "{{ images.nextcloud_redis }}"
      name: "nextcloud_redis"
      command:
        - "redis-server"
        - "--requirepass"
        - "nextcloud"
      networks:
        - name: "{{ docker_network.name }}"
          alias: "nextcloud_redis"
  register: container_nextcloud_redis

- name: Deploy NextCloud
  docker_deploy:
    host: "{{ docker.host }}"
    project: "{{ project_name }}"
    container:
      image: "{{ images.nextcloud }}"
      name: "nextcloud"
      hostname: "nextcloud.{{ domain_name }}"
      networks:
        - name: "{{ docker_network.name }}"
          alias: "nextcloud"
      volumes:
        - host: "{{ data_dir }}/data/nextcloud/html"
          guest: "/var/www/html"
          read_only: false
        - host: "{{ data_dir }}/data/nextcloud/apps"
          guest: "/var/www/html/custom_apps"
          read_only: false
        - host: "{{ data_dir }}/data/nextcloud/config"
          guest: "/var/www/html/config"
          read_only: false
        - host: "{{ data_dir }}/data/nextcloud/theme"
          guest: "/var/www/html/themes/custom"
          read_only: false
        - host: "{% if nextcloud.data.override %}{{ nextcloud.data.path }}{% else %}{{ data_dir }}/data/nextcloud/data{% endif %}"
          guest: "/var/www/html/data"
          read_only: false
      environment:
        - key: "POSTGRES_DB"
          value: "nextcloud"
        - key: "POSTGRES_USER"
          value: "nextcloud"
        - key: "POSTGRES_PASSWORD"
          value: "{{ passwords.nextcloud_database }}"
        - key: "POSTGRES_HOST"
          value: "{{ container_postgres.alias }}"
        - key: "NEXTCLOUD_ADMIN_USER"
          value: "admin"
        - key: "NEXTCLOUD_ADMIN_PASSWORD"
          value: "{{ passwords.nextcloud_admin }}"
        - key: "REDIS_HOST"
          value: "{{ container_nextcloud_redis.alias }}"
        - key: "REDIS_HOST_PORT"
          value: "6379"
        - key: "REDIS_HOST_PASSWORD"
          value: "nextcloud"
        - key: "NEXTCLOUD_HOSTNAME"
          value: "nextcloud.{{ domain_name }}"
        - key: "NEXTCLOUD_TRUSTED_DOMAINS"
          value: "nextcloud.{{ domain_name }} nextcloud localhost"
        - key: "OVERWRITEPROTOCOL"
          value: "http"
        - key: "OVERWRITEHOST"
          value: "nextcloud.{{ domain_name }}"
      labels:
        - key: "traefik.enable"
          value: "true"
        - key: "traefik.http.services.nextcloud.loadbalancer.server.port"
          value: "80"
        - key: "traefik.http.routers.nextcloud.rule"
          value: "Host(`nextcloud.{{ domain_name }}`)"
        - key: "traefik.http.routers.nextcloud.entrypoints"
          value: "{{ traefik_entrypoints }}"
        - key: "traefik.http.routers.nextcloud.tls.certresolver"
          value: "{{ traefik_certresolver }}"
        - key: "traefik.http.routers.nextcloud.tls"
          value: "{{ 'true' if traefik.https.enabled else 'false' }}"
  register: container_nextcloud

- name: Healthcheck for NextCloud 
  http_wait:
    url: "{{traefik_entrypoint}}/login"
    status_code: "200"
    retries: 5
    delay: 10
    headers:
      - "Host: nextcloud.{{ domain_name }}"

- name: Copy script for NextCloud
  copy:
    src: "roles/nextcloud/files/nextcloud.py"
    dest: "/tmp/nextcloud.py"

- name: Run script for NextCloud
  docker_script:
    docker:
      host: "{{ docker.host }}"
    network: "{{ docker_network.name }}"
    image: "{{ scriptrunner.id }}"
    script: "/tmp/nextcloud.py"
    args:
      - "init"
      - |
        {
          "url": "http://{{ container_nextcloud.alias }}:80",
          "username": "admin",
          "password": "{{ passwords.nextcloud_admin }}"{% if nextcloud.ldap.enabled %},
          "ldap": {
            "host": "{{ container_ldap.alias }}",
            "port": 389,
            "user": "cn=admin,{{ ldap.domain }}",
            "password": "{{ passwords.ldap_admin }}",
            "base": "{{ ldap_users.dn }}",
            "filter": "(memberOf={{ ldap_groups_nextcloud.dn }})",
            "user_attribute": "uid"
          }{% endif %}
        }
