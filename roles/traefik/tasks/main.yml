---
- name: Check if base role is included
  fail:
    msg: "Traefik needs the base role"
  when: "'base' not in role_names"

- name: Create folder
  become: yes
  file:
    path: "{{ data_dir }}/traefik/config"
    state: directory
    mode: 0755
    owner: root
    group: root
    recurse: no

- name: Set facts
  set_fact:
    traefik_protocol: "{{ traefik_https_enabled | ternary('https', 'http') }}"
    traefik_port: "{{ traefik_https_enabled | ternary(traefik_https_port, traefik_http_port) }}"
    traefik_entrypoints: "{{ traefik_https_enabled | ternary('web-secure', 'web') }}"
    traefik_certresolver: "{{ traefik_acme_enabled | ternary('letsencrypt', '') }}"
    traefik_tls: "{{ true | string | lower }}"
    traefik_ports: []

- name: Create config files
  become: yes
  template:
    src: "roles/traefik/files/{{item}}.j2"
    dest: "{{ data_dir }}/traefik/{{item}}"
  loop:
    - "traefik.yml"
    - "config/middlewares.yml"
    - "config/routers.yml"
    - "config/services.yml"
  register: traefik_config

- name: Remove existing service if config changes
  docker_swarm_service:
    project_name: "{{ project_name }}"
    remove:
      - "traefik"
  when: traefik_config.changed

- name: Create LDAP group
  ldap_group:
    container: "{{ openldap_service.tasks[0].id }}"
    user: "{{ ldap_admin_user }}"
    password: "{{ ldap_admin_password }}"
    base: "{{ ldap_groups_dn }}"
    cn: "{{ traefik_ldap_group }}"
    members:
      - "{{ ldap_admin_user }}"
  when: traefik_authelia_enabled

- name: Create acme.json file
  become: yes
  copy:
    content: "{}"
    dest: "{{ data_dir }}/traefik/acme.json"
    force: no
    mode: 0600
    owner: root
    group: root

- name: Set traefik_address
  set_fact:
    traefik_address: "{{ traefik_protocol }}://localhost:{{ traefik_port }}"
  when: traefik_port_mode == 'host'

- name: Check swarm load balancer
  fail:
    msg: "Can not retrieve swarm network load balancer. Maybe you are running inside of CI/CD?"
  when: traefik_port_mode == 'ingress' and docker_network_load_balancer is not defined

- name: Set traefik_address
  set_fact:
    traefik_address: "{{ traefik_protocol }}://{{ docker_network_load_balancer }}:{{ traefik_port }}"
  when: traefik_port_mode == 'ingress'

- name: Set HTTP port
  set_fact:
    traefik_ports: >
      {{ traefik_ports + [{
        "target": "80",
        "published": traefik_http_port,
        "protocol": "tcp",
        "mode": traefik_port_mode
      }]}}

- name: Set HTTPS port
  set_fact:
    traefik_ports: >
      {{ traefik_ports + [{
        "target": "443",
        "published": traefik_https_port,
        "protocol": "tcp",
        "mode": traefik_port_mode
      }]}}

- name: Deploy service
  docker_swarm_service:
    project_name: "{{ project_name }}"
    definition:
      traefik:
        image: "{{ traefik_image }}"
        deploy:
          replicas: 1
          labels:
            - "traefik.enable=true"
            - "traefik.http.routers.traefik.rule=Host(`traefik.{{ domain_name }}`)"
            - "traefik.http.services.traefik.loadbalancer.server.port=8080"
            - "traefik.http.routers.traefik.entrypoints={{ traefik_entrypoints }}"
            - "traefik.http.routers.traefik.tls={{ traefik_tls }}"
            - "traefik.http.routers.traefik.tls.certresolver={{ traefik_certresolver }}"
            - "traefik.http.routers.traefik.middlewares={{ traefik_authelia_enabled | ternary('authelia@file', '') }}"
        networks:
          - "{{ docker_network_name }}"
        ports: "{{ traefik_ports }}"
        volumes:
          - "{{ traefik_docker_socket }}:/var/run/docker.sock:ro"
          - "{{ data_dir }}/traefik/acme.json:/acme.json"
          - "{{ data_dir }}/traefik/traefik.yml:/etc/traefik/traefik.yml:ro"
          - "{{ data_dir }}/traefik/config:/config:ro"
  register: result

- name: Set facts
  set_fact:
    traefik_service: "{{ result.services.traefik }}"

- name: Healthcheck
  http_wait:
    url: "{{ traefik_address }}/"
    status_code: 200, 304, 404
    retries: 3
    delay: 5
