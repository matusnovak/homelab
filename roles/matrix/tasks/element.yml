---
- name: Create Riot folders
  become: yes
  file:
    path: "{{ data_dir }}/data/matrix/{{ item }}"
    state: directory
    mode: 0755
    owner: "0"
    group: "0"
    recurse: no
  loop:
    - "riot"

- name: Generate Riot config files
  become: yes
  template:
    src: "roles/matrix/files/{{item}}.j2"
    dest: "{{ data_dir }}/data/matrix/{{item}}"
  loop:
    - "riot/config.json"
  register: matrix_riot_config

- name: Deploy Riot
  docker_deploy:
    host: "{{ docker.host }}"
    project: "{{ project_name }}"
    container:
      image: "{{ images.matrix_riot }}"
      name: "matrix_riot"
      networks:
        - name: "{{ docker_network.name }}"
          alias: "matrix_riot"
      volumes:
        - host: "{{ data_dir }}/data/matrix/riot/config.json"
          guest: "/app/config.json"
          read_only: true
      labels:
        - key: "traefik.enable"
          value: "true"
        - key: "traefik.http.services.riot.loadbalancer.server.port"
          value: "80"
        - key: "traefik.http.routers.riot.rule"
          value: "Host(`riot.{{ domain_name }}`)"
        - key: "traefik.http.routers.riot.entrypoints"
          value: "{{ traefik_entrypoints }}"
        - key: "traefik.http.routers.riot.tls.certresolver"
          value: "{{ traefik_certresolver }}"
        - key: "traefik.http.routers.riot.tls"
          value: "{{ 'true' if traefik.https.enabled else 'false' }}"
  register: container_matrix_riot

- name: Restart Riot if config changes
  docker_restart:
    host: "{{ docker.host }}"
    project: "{{ project_name }}"
    containers:
      - "matrix_riot"
  when: container_matrix_riot.changed == false and matrix_riot_config.changed

- name: Healthcheck for Riot 
  http_wait:
    url: "{{traefik_entrypoint}}"
    status_code: "200"
    retries: 3
    delay: 5
    headers:
      - "Host: riot.{{ domain_name }}"
