---
- name: Create Discord bridge folder
  become: yes
  file:
    path: "{{ data_dir }}/data/matrix/bridges/discord"
    state: directory
    mode: 0755
    owner: "1000"
    group: "1000"
    recurse: no

- name: Create Discord bridge database
  docker_script:
    docker:
      host: "{{ docker.host }}"
    network: "{{ docker_network.name }}"
    image: "{{ scriptrunner.id }}"
    script: "/tmp/postgres.py"
    args:
      - "create"
      - |
        {
          "host": "{{ container_postgres.alias }}",
          "user": "postgres",
          "password": "{{ passwords.postgres_admin }}",
          "database": "postgres",
          "port": 5432,
          "create": {
            "database": {
              "name": "matrix_discord",
              "extra": "ENCODING 'UTF8' LC_COLLATE='C' LC_CTYPE='C' template=template0"
            },
            "user": {
              "name": "matrix_discord",
              "password": "{{ passwords.matrix_discord_database }}",
              "database": "matrix_discord"
            }
          }
        }

- name: Check Discord bridge config
  become: yes
  stat:
    path: "{{ data_dir }}/data/matrix/bridges/discord/config.yaml"
  register: "matrix_discord_config_file"

- name: Create Discord bridge config
  become: yes
  template:
    src: "roles/matrix/files/bridges/discord/{{item}}.j2"
    dest: "{{ data_dir }}/data/matrix/bridges/discord/{{item}}"
    owner: "1000"
    group: "1000"
  loop:
    - "config.yaml"
  register: "matrix_discord_config"
  when: not matrix_discord_config_file.stat.exists

- name: Deploy Discord bridge
  docker_deploy:
    host: "{{ docker.host }}"
    project: "{{ project_name }}"
    container:
      image: "{{ images.matrix_discord }}"
      name: "matrix_discord"
      networks:
        - name: "{{ docker_network.name }}"
          alias: "discordbridge"
      volumes:
        - host: "{{ data_dir }}/data/matrix/bridges/discord"
          guest: "/data"
          read_only: false
          mode: "z"
  register: container_matrix_discord
