---
- name: Create folder structure
  become: yes
  file:
    path: '{{ data_dir }}/openldap/{{ item }}'
    state: directory
    mode: '0700'
    owner: '911'
    group: '911'
    recurse: false
  loop:
    - 'data'
    - 'config'

- name: Create persistent volume
  community.kubernetes.k8s:
    state: present
    verify_ssl: '{{ k8s_ssl_verify }}'
    api_version: '{{ k8s_api_version }}'
    api_key: '{{ k8s_api_key }}'
    definition:
      apiVersion: v1
      kind: PersistentVolume
      metadata:
        name: 'openldap-{{ item }}-pv-volume'
        namespace: '{{ project_name }}'
        labels:
          app: openldap
          type: local
      spec:
        storageClassName: microk8s-hostpath
        capacity:
          storage: 128Mi
        accessModes:
          - ReadWriteMany
        persistentVolumeReclaimPolicy: Retain
        hostPath:
          path: '{{ data_dir }}/openldap/{{ item }}'
  loop:
    - data
    - config

- name: Create persistent volume claim
  community.kubernetes.k8s:
    state: present
    verify_ssl: '{{ k8s_ssl_verify }}'
    api_version: '{{ k8s_api_version }}'
    api_key: '{{ k8s_api_key }}'
    definition:
      apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: 'openldap-{{ item }}-pv-claim'
        namespace: '{{ project_name }}'
        labels:
          app: openldap
          type: local
      spec:
        storageClassName: microk8s-hostpath
        resources:
          requests:
            storage: 128Mi
        accessModes:
          - ReadWriteMany
        volumeName: 'openldap-{{ item }}-pv-volume'
  loop:
    - data
    - config

- name: Create service
  community.kubernetes.k8s:
    state: present
    verify_ssl: '{{ k8s_ssl_verify }}'
    api_version: '{{ k8s_api_version }}'
    api_key: '{{ k8s_api_key }}'
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: openldap
        namespace: '{{ project_name }}'
        labels:
          app: openldap
      spec:
        ports:
          - port: 389
            protocol: TCP
        selector:
          app: openldap

- name: Create deployment
  community.kubernetes.k8s:
    state: present
    verify_ssl: '{{ k8s_ssl_verify }}'
    api_version: '{{ k8s_api_version }}'
    api_key: '{{ k8s_api_key }}'
    definition:
      apiVersion: v1
      kind: Deployment
      metadata:
        name: openldap
        namespace: '{{ project_name }}'
        labels:
          app: openldap
      spec:
        replicas: 1
        strategy:
          type: Recreate
        revisionHistoryLimit: 0
        selector:
          matchLabels:
            app: openldap
        template:
          metadata:
            name: openldap
            namespace: '{{ project_name }}'
            labels:
              app: openldap
          spec:
            containers:
              - name: openldap
                image: '{{ ldap_image }}'
                imagePullPolicy: "IfNotPresent"
                ports:
                  - containerPort: 389
                env:
                  - name: LDAP_ORGANISATION
                    value: '{{ ldap_organisation }}'
                  - name: LDAP_BASE_DN
                    value: '{{ domain_component }}'
                  - name: LDAP_DOMAIN
                    value: '{{ domain_name }}'
                  - name: LDAP_ADMIN_PASSWORD
                    value: '{{ ldap_admin_password }}'
                  - name: LDAP_REMOVE_CONFIG_AFTER_SETUP
                    value: 'false'
                  - name: LDAP_TLS
                    value: 'false'
                  - name: 'LDAP_READONLY_USER'
                    value: 'true'
                  - name: 'LDAP_READONLY_USER_USERNAME'
                    value: 'readonly'
                  - name: 'LDAP_READONLY_USER_PASSWORD'
                    value: '{{ ldap_readonly_password }}'
                volumeMounts:
                  - mountPath: /var/lib/openldap
                    name: openldap-data
                  - mountPath: /etc/openldap/slapd.d
                    name: openldap-config
                readinessProbe:
                  exec:
                    command:
                      - 'sh'
                      - '-c'
                      - 'ldapsearch -x -H ldap://127.0.0.1 -b $LDAP_BASE_DN -s sub -D cn=admin,$LDAP_BASE_DN -w $LDAP_ADMIN_PASSWORD'
                  initialDelaySeconds: 10
                  periodSeconds: 30
            volumes:
              - name: openldap-data
                persistentVolumeClaim:
                  claimName: openldap-data-pv-claim
              - name: openldap-config
                persistentVolumeClaim:
                  claimName: openldap-config-pv-claim

- name: Set facts
  set_fact:
    ldap_admin_user: "cn=admin,{{ domain_component }}"
    ldap_groups_dn: "ou={{ ldap_groups_name }},{{ domain_component }}"
    ldap_users_dn: "ou={{ ldap_users_name }},{{ domain_component }}"

- name: Wait for service ready
  community.kubernetes.k8s_info:
    verify_ssl: '{{ k8s_ssl_verify }}'
    api_version: '{{ k8s_api_version }}'
    api_key: '{{ k8s_api_key }}'
    kind: Deployment
    namespace: '{{ project_name }}'
    name: 'openldap'
    label_selectors: 
      - app = openldap
  register: output_info
  until: output_info | json_query('resources[*].status.readyReplicas') | select ('match','1') | list | length == 1
  delay: 10
  retries: 6
