---
- name: Pull image
  docker_pull_push:
    image: '{{ phpldapadmin_image }}'
    address: '{{ registry_address }}'
  register: registry_phpldapadmin_image

- name: Create service
  kubernetes.core.k8s:
    state: present
    verify_ssl: '{{ k8s_ssl_verify }}'
    api_version: '{{ k8s_api_version }}'
    api_key: '{{ k8s_api_key }}'
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: phpldapadmin
        namespace: '{{ project_name }}'
        labels:
          app: phpldapadmin
      spec:
        ports:
          - port: 80
            name: web
            protocol: TCP
        selector:
          app: phpldapadmin

- name: Create deployment
  kubernetes.core.k8s:
    state: present
    verify_ssl: '{{ k8s_ssl_verify }}'
    api_version: '{{ k8s_api_version }}'
    api_key: '{{ k8s_api_key }}'
    definition:
      apiVersion: v1
      kind: Deployment
      metadata:
        name: phpldapadmin
        namespace: '{{ project_name }}'
        labels:
          app: phpldapadmin
      spec:
        replicas: 1
        strategy:
          type: Recreate
        revisionHistoryLimit: 0
        selector:
          matchLabels:
            app: phpldapadmin
        template:
          metadata:
            name: phpldapadmin
            namespace: '{{ project_name }}'
            labels:
              app: phpldapadmin
          spec:
            containers:
              - name: phpldapadmin
                image: '{{ registry_phpldapadmin_image.name }}'
                imagePullPolicy: "IfNotPresent"
                ports:
                  - name: web
                    containerPort: 80
                env:
                  - name: PHPLDAPADMIN_LDAP_HOSTS
                    value: 'openldap.{{ project_name }}.svc.cluster.local'
                  - name: PHPLDAPADMIN_HTTPS
                    value: "{{ 'false' | string | lower }}"

- name: Wait for service ready
  kubernetes.core.k8s_info:
    verify_ssl: '{{ k8s_ssl_verify }}'
    api_version: '{{ k8s_api_version }}'
    api_key: '{{ k8s_api_key }}'
    kind: Deployment
    namespace: '{{ project_name }}'
    name: 'phpldapadmin'
    label_selectors: 
      - app = phpldapadmin
  register: output_info
  until: output_info | json_query('resources[*].status.readyReplicas') | select ('match','1') | list | length == 1
  delay: 10
  retries: 6

- name: Create ingress route
  kubernetes.core.k8s:
    state: present
    verify_ssl: '{{ k8s_ssl_verify }}'
    api_version: '{{ k8s_api_version }}'
    api_key: '{{ k8s_api_key }}'
    definition:
      apiVersion: traefik.containo.us/v1alpha1
      kind: IngressRoute
      metadata:
        name: phpldapadmin-ingress
        namespace: '{{ project_name }}'
      spec:
        entryPoints:
          - web
          - websecure
        routes:
          - match: Host(`ldap.{{ domain_name }}`)
            kind: Rule
            services:
              - name: phpldapadmin
                port: 80
        tls: {}

- name: Healthcheck
  http_wait:
    url: '{{ traefik_address }}/'
    status_code: '200'
    retries: 3
    delay: 10
    headers:
      - 'Host: ldap.{{ domain_name }}'
